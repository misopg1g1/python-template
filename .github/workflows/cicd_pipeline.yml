name: CICD

on:
  push:
    branches:
      - production
      - staging

jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.10"
#
#      - name: Update pip
#        run: |
#          python -m pip install --upgrade pip
#      - name: Verificar archivo requirements.txt
#        run: |
#          if [ ! -f requirements.txt ]; then
#            echo "requirements.txt no encontrado. No se ejecutar치 la acci칩n."
#            exit 0
#          fi
#      - name: Install dependencies
#        run: |
#          python -m pip install -r requirements.txt
#
#      - name: Run tests
#        run: |
#          pytest
  build:
#    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Verificar archivo Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile no encontrado. No se ejecutar치 la acci칩n."
            exit 0
          fi
      - name: Log in to registry
        run: |
          docker login --username ${{ secrets.REGISTRY_USERNAME }} --password ${{secrets.REGISTRY_PASSWORD}} ${{ secrets.REGISTRY_HOST }}



      - name: Build Docker image
        if: success()
        run: |
          repo_name=$(basename $GITHUB_REPOSITORY)
          branch_name=$(basename $GITHUB_REF)
          registry_host=${{ secrets.REGISTRY_HOST }}
          registry_space=${{ secrets.REGISTRY_SPACE }}
          docker build -t ${registry_host}/${registry_space}/${repo_name}_${branch_name} .

      - name: Push Docker image to registry
        if: success()
        run: |
          repo_name=$(basename $GITHUB_REPOSITORY)
          branch_name=$(basename $GITHUB_REF)
          registry_host=${{ secrets.REGISTRY_HOST }}
          registry_space=${{ secrets.REGISTRY_SPACE }}
          docker push ${registry_host}/${registry_space}/${repo_name}_${branch_name}